document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("nav-analyze"),t=document.getElementById("nav-history"),n=document.getElementById("nav-sender"),s=document.getElementById("nav-settings"),r=(document.getElementById("view-analyze"),document.getElementById("view-history"),document.getElementById("view-sender"),document.getElementById("view-settings"),document.getElementById("analyze-btn")),a=document.getElementById("status"),o=document.getElementById("results"),i=document.getElementById("ai-history-container"),l=document.getElementById("clear-history-btn"),d=document.getElementById("sender-list-container"),c=document.getElementById("clear-sender-list-btn"),u=document.getElementById("sender-search-input"),m=document.getElementById("send-all-requests-btn"),y=document.getElementById("sender-all-status");let p=[],g="";const h=document.getElementById("ai-model-select"),v=document.querySelectorAll(".api-key-container"),E={gemini:document.getElementById("api-key-gemini"),chatgpt:document.getElementById("api-key-chatgpt"),deepseek:document.getElementById("api-key-deepseek"),doubao:document.getElementById("api-key-doubao")},b=document.getElementById("save-settings-btn"),L=document.getElementById("settings-status");function x(e){document.querySelectorAll(".view").forEach(e=>e.classList.remove("active")),document.querySelectorAll(".nav button").forEach(e=>e.classList.remove("active"));const t=document.getElementById(`view-${e}`),n=document.getElementById(`nav-${e}`);t&&t.classList.add("active"),n&&n.classList.add("active"),"settings"===e?chrome.storage.sync.get({selectedModel:"gemini",apiKeyGemini:"",apiKeyChatGpt:"",apiKeyDeepSeek:"",apiKeyDoubao:""},e=>{h&&(h.value=e.selectedModel),E.gemini&&(E.gemini.value=e.apiKeyGemini),E.chatgpt&&(E.chatgpt.value=e.apiKeyChatGpt),E.deepseek&&(E.deepseek.value=e.apiKeyDeepSeek),E.doubao&&(E.doubao.value=e.apiKeyDoubao),h&&h.dispatchEvent(new Event("change"))}):"history"===e?f():"sender"===e&&I()}function f(){i&&(i.innerHTML="正在加载记录..."),chrome.storage.local.get({aiAnalysisHistory:[]},e=>{var t;t=e.aiAnalysisHistory,i&&(i.innerHTML="",t&&0!==t.length?t.slice().forEach((e,t)=>{const n=document.createElement("div");n.className="history-item",n.dataset.historyIndex=t;const s=e.timestamp?new Date(e.timestamp).toLocaleString():"未知时间",r=e.type?` (${e.type})`:"",a=e.sourceUrl?` on ${e.sourceUrl}`:"";e.result&&(e.result.substring(0,150),e.result.length),n.innerHTML=`\n                <div class="history-actions" style="float: right;">\n                    <button class="send-history-to-sender-btn secondary" data-history-index="${t}">发送全部到发包器</button>\n                    <button class="copy-history-btn secondary" data-full-result="${S(e.result||"")}">复制结果</button>\n                </div>\n                <div class="history-meta">${s}${r}${a}</div>\n                <details>\n                    <summary style="cursor: pointer; color: #555;">查看/隐藏 AI 分析结果</summary>\n                    <pre>${S(e.result||"[无结果]")}</pre>\n                </details>\n            `,i.appendChild(n)}):i.innerHTML='<p style="text-align: center; color: #888;">暂无分析记录。</p>')})}function I(){if(!d)return;d.innerHTML="";const e=p.filter(e=>{const t=g.toLowerCase();return!t||e.url.toLowerCase().includes(t)||e.method.toLowerCase().includes(t)});0!==e.length?e.forEach((e,t)=>{const n=document.createElement("div");n.className="sender-item",n.dataset.apiId=e.id,n.innerHTML=`\n                <div class="sender-grid">\n                    <label>Method:</label>\n                    <input type="text" class="sender-method-input" value="${S(e.method)}">\n                    <label>URL:</label>\n                    <input type="text" class="sender-url-input" value="${S(e.url)}">\n                    <label>Headers:</label>\n                    <textarea class="sender-headers-textarea" placeholder='请输入 JSON 格式的 Headers (例如 {"Authorization": "Bearer xxx"})'>${S(e.headers)}</textarea>\n                    <label>Body:</label>\n                    <textarea class="sender-body-textarea" placeholder='请输入 JSON 格式的 Body (GET 请求请留空)'>${S(e.body)}</textarea>\n                </div>\n                <button class="sender-item-send-btn primary">发送请求</button>\n                <hr>\n                <label>响应:</label>\n                <pre class="sender-response-pre">${e.response?S(e.response):"尚未请求"}</pre>\n            `,d.appendChild(n)}):d.innerHTML='<p style="text-align: center; color: #888;">列表为空，请从 AI 记录发送或手动添加。</p>'}async function C(e,t){const n=p.findIndex(t=>t.id===e);if(-1===n)return{success:!1,error:"API not found"};const s=p[n],r=t.querySelector(".sender-url-input"),a=t.querySelector(".sender-method-input"),o=t.querySelector(".sender-headers-textarea"),i=t.querySelector(".sender-body-textarea"),l=t.querySelector(".sender-response-pre"),d=t.querySelector(".sender-item-send-btn");let c=r?r.value.trim():"";const u=a?a.value.trim().toUpperCase():"GET",m=o?o.value.trim():"{}",y=i?i.value.trim():"";if(s.url=c,s.method=u,s.headers=m,s.body=y,!c)return l&&(l.textContent="错误: URL 不能为空。"),{success:!1,error:"URL is empty"};let g=c;if(!c.startsWith("http://")&&!c.startsWith("https://"))if(c.startsWith("/")&&s.baseOrigin)g=s.baseOrigin+c;else if(c.startsWith("/"))try{const e=await chrome.tabs.query({active:!0,currentWindow:!0});if(!(e.length>0&&e[0].url))throw new Error("无法获取当前页面 Origin 来解析相对 URL。");{const t=new URL(e[0].url).origin;g=t+c}}catch(e){return l&&(l.textContent=`错误: 无法解析相对 URL (无来源 Origin 且无活动 Tab)。\n${e.message}`),{success:!1,error:"Cannot resolve relative URL"}}else g="https://"+c;let h={};if(m)try{h=JSON.parse(m)}catch(e){return l&&(l.textContent=`错误: Headers 不是有效的 JSON 格式。\n${e.message}`),{success:!1,error:"Invalid Headers JSON"}}const v={method:u,headers:h};if(y&&"GET"!==u&&"HEAD"!==u)try{JSON.parse(y),v.body=y,Object.keys(h).find(e=>"content-type"===e.toLowerCase())||(h["Content-Type"]="application/json;charset=UTF-8")}catch(e){v.body=y}return l&&(l.textContent="请求发送中..."),d&&(d.disabled=!0),new Promise(e=>{chrome.runtime.sendMessage({type:"SEND_API_REQUEST",data:{url:g,options:v}},t=>{let n="";t&&"ok"===t.status?(n=`Status: ${t.statusCode} ${t.statusText}\n\n`+("object"==typeof t.data?JSON.stringify(t.data,null,2):String(t.data)),l&&(l.textContent=n),e({success:!0})):(n=`请求失败: ${t?t.error:"Unknown error"}`,l&&(l.textContent=n),e({success:!1,error:t?t.error:"Unknown error"})),s.response=n,d&&(d.disabled=!1)})})}function S(e){return"string"!=typeof e?"":e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}e.addEventListener("click",()=>x("analyze")),t.addEventListener("click",()=>x("history")),n.addEventListener("click",()=>x("sender")),s.addEventListener("click",()=>x("settings")),h&&h.addEventListener("change",()=>{const e=h.value;v.forEach(t=>{t.style.display=t.id.startsWith(e)?"block":"none"})}),b&&b.addEventListener("click",function(){const e={selectedModel:h?h.value:"gemini",apiKeyGemini:E.gemini?E.gemini.value.trim():"",apiKeyChatGpt:E.chatgpt?E.chatgpt.value.trim():"",apiKeyDeepSeek:E.deepseek?E.deepseek.value.trim():"",apiKeyDoubao:E.doubao?E.doubao.value.trim():""};chrome.storage.sync.set(e,()=>{L&&(L.textContent="设置已保存！"),setTimeout(()=>{L&&(L.textContent="")},2e3)})}),r&&r.addEventListener("click",()=>{a&&(a.textContent="正在请求分析..."),o&&(o.textContent=""),r.disabled=!0;try{chrome.runtime.sendMessage({type:"START_ANALYSIS"},e=>{chrome.runtime.lastError&&(console.error("[Popup] Error sending message:",chrome.runtime.lastError),a&&(a.textContent=`发送消息失败: ${chrome.runtime.lastError.message}`),r.disabled=!1)})}catch(e){console.error("[Popup] Exception during sendMessage:",e),a&&(a.textContent=`发送消息异常: ${e.message}`),r.disabled=!1}}),chrome.runtime.onMessage.addListener(e=>("ANALYSIS_STATUS"===e.type?a&&(a.textContent=e.text):"ANALYSIS_COMPLETE"===e.type?(a&&(a.textContent="分析完成！"),o&&(o.textContent=e.analysis),r&&(r.disabled=!1)):"ANALYSIS_ERROR"===e.type&&(a&&(a.textContent="分析出错！"),o&&(o.textContent=e.error),r&&(r.disabled=!1)),!0)),i&&i.addEventListener("click",e=>{const t=e.target;if(!t.closest(".history-item"))return;const n=t.dataset.historyIndex;var s,r;t.classList.contains("copy-history-btn")?(s=t.dataset.fullResult,r=t,s&&r&&navigator.clipboard.writeText(s).then(()=>{const e=r.textContent;r.textContent="已复制!",r.disabled=!0,setTimeout(()=>{r.textContent=e,r.disabled=!1},1500)}).catch(e=>{console.error("复制失败:",e),alert("复制失败: "+e.message)})):t.classList.contains("send-history-to-sender-btn")&&chrome.storage.local.get({aiAnalysisHistory:[]},e=>{const t=e.aiAnalysisHistory[n];if(t&&t.result){let e="";if(t.sourceUrl)try{e=new URL(t.sourceUrl).origin}catch(e){console.warn("无法从 sourceUrl 解析 origin:",t.sourceUrl,e)}const n=function(e,t=""){if(!e)return[];const n=[],s=/---\s*\*\*URL\*\*:.*?Body\)\*\*:[\s\S]*?```json\n([\s\S]*?)\n```/gs,r=/\*\*URL\*\*:.*?`([^`]+)`/,a=/\*\*Method\*\*:.*?`(\w+)`/;let o;for(;null!==(o=s.exec(e));){const e=o[0],s=o[1].trim(),i=e.match(r),l=e.match(a);if(i&&i[1]){const e=i[1].trim();if(e.startsWith("[")||e.includes("{"))continue;const r=l?l[1].trim().toUpperCase():"GET";let a={};["POST","PUT","PATCH"].includes(r)&&s&&"null"!==s&&(a["Content-Type"]="application/json;charset=UTF-8"),n.push({id:`api_${Date.now()}_${Math.random()}`,url:e,method:r,headers:JSON.stringify(a,null,2),body:"null"===s?"":s,response:null,baseOrigin:t})}}return n}(t.result,e);n.length>0?(s=n,p.unshift(...s),I(),x("sender"),alert(`已成功添加 ${n.length} 个 API 到发包器！`)):alert("未能从此记录中解析出有效的 API。")}else alert("无法加载此历史记录的数据。");var s})}),l&&l.addEventListener("click",()=>{confirm("确定要清空所有 AI 分析记录吗？此操作不可撤销。")&&chrome.storage.local.set({aiAnalysisHistory:[]},()=>{f()})}),d&&d.addEventListener("click",e=>{if(e.target.classList.contains("sender-item-send-btn")){const t=e.target.closest(".sender-item");t&&C(t.dataset.apiId,t)}}),m&&m.addEventListener("click",async()=>{const e=d?d.querySelectorAll(".sender-item"):[];if(0===e.length)return void(y&&(y.textContent="列表为空。"));m.disabled=!0,m.textContent="请求中...";let t=0,n=0;for(let s=0;s<e.length;s++){const r=e[s],a=r.dataset.apiId,o=p.find(e=>e.id===a)?.url||"未知URL";y&&(y.textContent=`正在发送第 ${s+1} / ${e.length} 个请求... (${o})`),(await C(a,r)).success?t++:n++,s<e.length-1&&await new Promise(e=>setTimeout(e,300))}y&&(y.textContent=`全部 ${e.length} 个请求已发送完毕！成功 ${t} 个，失败 ${n} 个。`),m.disabled=!1,m.textContent="一键请求全部"}),c&&c.addEventListener("click",()=>{confirm("确定要清空发包器中的所有 API 吗？")&&(p=[],g="",u&&(u.value=""),I(),y&&(y.textContent="列表已清空。"))}),u&&u.addEventListener("input",()=>{g=u.value,I()}),x("analyze")});